% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/load_tirtlseq.R
\name{load_tirtlseq}
\alias{load_tirtlseq}
\title{Load data from TIRTLseq experiments}
\usage{
load_tirtlseq(
  directory,
  chain = c("all", "paired", "alpha", "beta"),
  sep = "_",
  meta_columns = NULL,
  samples = NULL,
  pseudobulk_columns = "auto",
  paired_columns = "auto",
  n_threads = data.table::getDTthreads(),
  compress_strings = FALSE,
  verbose = TRUE,
  stringsAsFactors = FALSE,
  n_max = Inf
)
}
\arguments{
\item{directory}{the directory to look in for ".tsv" or ".tsv.gz" files of TIRTLseq data}

\item{chain}{which TCR chain data to load data for -- "all" chains (alpha, beta, and paired) by default.}

\item{sep}{(optional) separator in the filename for metadata information ("_" by default)}

\item{meta_columns}{(optional) a vector of names identifying the metadata contained in the filenames,
for example \code{c("marker", "timepoint", "donor")} for files named something like "cd8_timepoint2_donor1 ... .tsv".}

\item{samples}{(optional) specific sample ids (the part of the filename before "_pseudobulk" or "_TIRTLoutput") to load. Default is NULL (loads all samples in the directory).}

\item{pseudobulk_columns}{(optional) the columns of the pseudobulk .tsv(.gz) to read. Either
a list of columns or one of "auto", "all", or "minimal". "auto" (default) loads all columns except for
some redundant ones. "all" loads all columns. "minimal" loads a small number of the most important columns.}

\item{paired_columns}{(optional) the columns of the paired .tsv(.gz) to read. Either
a list of columns or one of "auto", "all", or "minimal". "auto" (default) loads all columns except for
some redundant ones. "all" loads all columns. "minimal" loads a small number of the most important columns.}

\item{n_threads}{(optional) number of CPU threads to use for reading .tsv(.gz) files}

\item{compress_strings}{(optional) whether to compress nucleotide and amino acid sequences using the Biostrings package.}

\item{verbose}{(optional) whether to print the name of each file loaded (default is TRUE).}

\item{stringsAsFactors}{(optional) read character strings in as factors}

\item{n_max}{(optional) the maximum number of files to read in -- used mostly for testing purposes (default is Inf, i.e. read all files).}
}
\value{
The function returns a list with two objects:

\code{$meta} - a metadata table (data frame)

\code{$data} - a list with one entry for each sample. Each entry is a list with entries
\code{$alpha}, \code{$beta}, and \code{$paired}, which are data frames for the alpha- and beta-chain
pseudo-bulk data and the paired data respectively.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}

\code{load_tirtlseq()} loads paired-TCR and pseudo-bulk data from TIRTLseq experiments
from a given directory. It can also automatically assemble metadata from filenames.
}
\details{
The function expects ".tsv" (or ".tsv.gz") files. It looks for files ending in
"_pseudobulk_TRA.tsv" (alpha-chain pseudo-bulk), "_pseudobulk_TRB.tsv" (beta-chain pseudo-bulk),
and "_TIRTLoutput.tsv" (paired alpha and beta chains).

By default, the function will construct a metadata table with a row for each sample, based
on unique strings at the beginning of filenames (before "_TIRTLoutput.tsv" or similar).
If the filename contains sample metadata, then it can add multiple columns to the metadata
table with this information. For example, if a typical file looks like "cd8_timepoint2_donor1_TIRTLoutput.tsv"
and the user supplies \code{c("cell_type", "timepoint", "donor")} for \code{meta_columns} and \code{"_"} for \code{sep},
then the metadata table will look like something like this:
\preformatted{
   sample_id             cell_type   timepoint       donor     label
     <chr>               <chr>         <chr>         <chr>     <chr>
1 cd8_timepoint2_donor1    cd8       timepoint2      donor1    cell_type: cd8 | timepoint: timepoint2 | donor: donor1
2 ...
3 cd4_timepoint1_donor3    cd4       timepoint1      donor3    cell_type: cd4 | timepoint: timepoint1 | donor: donor3
}
}
\examples{
\dontrun{
paired = load_tirtlseq("path_to/your_directory", sep = "_", meta_columns = c("cell_type", "timepoint"))
}

}
\seealso{
Other data_wrangling: 
\code{\link{add_metadata}()},
\code{\link{filter_dataset}()},
\code{\link{reorder_samples}()}
}
\concept{data_wrangling}
