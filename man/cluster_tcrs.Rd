% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cluster_tcrs.R
\name{cluster_tcrs}
\alias{cluster_tcrs}
\title{Clustering of TCRs using TCRdist and the Leiden algorithm}
\usage{
cluster_tcrs(data, tcrdist_cutoff = 90, resolution = 0.1, with_vdjdb = TRUE)
}
\arguments{
\item{data}{a list of TIRTLseq TCR data for samples created with \code{\link{load_tirtlseq}()}}

\item{tcrdist_cutoff}{the \code{\link{TCRdist}()} function will only record TCRdist values
less than or equal to the cutoff. Default is 90. Note: Higher cutoffs will return more
data, at most NxN where N is the number of unique TCRs.}

\item{resolution}{the "resolution" parameter for the Leiden algorithm. A lower
value will produce larger clusters and a higher value will produce smaller clusters.
Typical values are in the 0.1 - 2.0 range. A higher value may be better for densely
connected data while a lower value may be better for moderately connected data. Default is 0.1.}

\item{with_vdjdb}{if TRUE, observed clones will be compared and clustered with annotated clones from VDJ-db.
If parameter is a data frame, the supplied data frame will be used as the database.}
}
\value{
Returns a list with the following elements:

\code{$df} - a data frame with all unique TCRs along with cluster annotations

\code{$dist_df} - a data frame with distances (TCRdist) between TCR pairs in long format

\code{$sparse_adj_mat} - an adjacency matrix (in sparse format) marking TCR pairs with TCRdist <= tcrdist_cutoff

\code{$graph_adj} - an igraph object created from the adjacency matrix

\code{$tcrdist_cutoff} - the cutoff used for TCRdist

\code{$resolution} - the resolution parameter used for the Leiden algorithm
}
\description{
The \code{cluster_tcrs()} function aggregates all of the paired TCRs found in the data,
calculates pairwise similarity using the va, vb, cdr3a, and cdr3b regions (via TCRdist),
and clusters the results using the Leiden algorithm.
}
\details{
The function also filters the dataset to TCRs that are valid for TCRdist.

The following TCRs are removed:
 - TCRs that contain stop codons (*) or frame shifts (_) in their cdr3a or cdr3b regions
 - TCRs that contain a cdr3 region with 5 or less amino acids
 - TCRs that contain a v segment allele not found in our parameter table

V-segments that do not specify an allele (e.g. "TRAV1-2" instead of "TRAV1-2*01")
will be assigned to the "*01" allele.
}
\examples{
# example code
# paired = load_tirtlseq("your_directory/")
# obj = cluster_tcrs(paired)

}
\seealso{
\code{\link{plot_clusters}()}, \code{\link{identify_non_functional_seqs}()}, \code{\link{TCRdist}()}
}
